name: Update semconv
on:
  schedule:
    #        ┌───────────── minute (0 - 59)
    #        │  ┌───────────── hour (0 - 23)
    #        │  │ ┌───────────── day of the month (1 - 31)
    #        │  │ │ ┌───────────── month (1 - 12 or JAN-DEC)
    #        │  │ │ │ ┌───────────── day of the week (0 - 6 or SUN-SAT)
    #        │  │ │ │ │
    #        │  │ │ │ │
    #        │  │ │ │ │
    #        *  * * * *
    - cron: '30 1 * * *'
  workflow_dispatch: {}
# Declare default permissions as read only.
permissions: read-all
jobs:
  semconv-update:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
    outputs:
      tag: ${{ steps.semconv-get-latest-tag.outputs.tag_name }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Fetch latest release tag
        id: semconv-get-latest-tag
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const owner = "open-telemetry";
            const repo = "semantic-conventions";
            const latestRelease = await github.rest.repos.getLatestRelease({
              owner,
              repo,
            });
            if (latestRelease && latestRelease.data && latestRelease.data.tag_name) {
              core.setOutput('tag_name', latestRelease.data.tag_name);
              console.log(`Latest ${owner}/${repo} release tag: ${latestRelease.data.tag_name}`);
            } else {
              throw new Error("Failed to set latest release tag.");
            }

      - name: Generate
        env:
          SEMCONV_LATEST_TAG: ${{ steps.semconv-get-latest-tag.outputs.tag_name }}
        run: |
          export TAG="${SEMCONV_LATEST_TAG:-}"
          make semconv-generate

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7.0.8
        with:
          title: 'chore(semconv): update semconv to ${{ steps.semconv-get-latest-tag.outputs.tag_name }}'
          branch: 'chore-semconv-update-to-${{ steps.semconv-get-latest-tag.outputs.tag }}'
          body: 'Updating semconv to match open-telemetry/semantic-conventions latest release, ${{ steps.semconv-get-latest-tag.outputs.tag }}'
          commit-message: 'chore(semconv): update semconv to ${{ steps.semconv-get-latest-tag.outputs.tag_name }}'
          labels: bot-generated
